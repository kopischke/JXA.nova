#!/usr/bin/env bash
#
# JXA script runner. Runs either the contents of $JXARUN_CODE, or the JXA source file passed
# as first argument with `osascript` (pass '-' as the first argument to run from stdin).
# Except for the file ($1), all parameters are passed as environment variables to avoid
# unwanted side effects when the file argument is missing:
# - JXARUN_SELECTED - whether to run the selection passed.
# - JXARUN_CODE - script code selection to run.
# - JXARUN_READABLE - whether output should be in human-readable form (see `man osascript)`.
abort_prefix="Aborting:"

# Construct the command line.
jxacmd="/usr/bin/osascript -l JavaScript"
if [[ "$JXARUN_READABLE" == "false" ]]; then
  jxacmd="$jxacmd -s s"
fi

# Pass selected script code, if requested, via stdin.
# This is why we use `bash`, as `echo -E` is not POSIX.
if [[ -n "$1" && "$1" != "-" && "$JXARUN_SELECTED" == "true" ]]; then
  if [[ -n "$JXARUN_CODE" ]]; then
    echo -E "$JXARUN_CODE" | $jxacmd -
    exit $?
  else
    echo "$abort_prefix no JXA selection to run." >&2
    exit 1
  fi
fi

# Otherwise check for a file (or the stdin code '-').
# We do this last as it is possible to run code selected in a scratch file
# via $JXARUN_SELECTED and $JXARUN_CODE.
if [[ -z "$1" ]]; then
  echo "$abort_prefix no JXA file to run." >&2
  exit 1
fi

$jxacmd "$1"
